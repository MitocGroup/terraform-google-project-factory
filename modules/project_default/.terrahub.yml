component:
  name: project_default
  template:
    locals:
      project_name: '${var.project_default_project_name}'
      project_id: >-
        ${format("%s-%s",var.project_default_project_name,
        random_id.random_project_id_suffix.hex)}
    resource:
      random_id:
        random_project_id_suffix:
          byte_length: 4
      null_resource:
        project_default:
          triggers:
            project_id: '${local.project_id}'
            organization_id: '${var.project_default_organization_id}'
          provisioner:
            - local-exec:
                when: create
                command: 'python ${local.component["path"]}/scripts/apply.py'
                environment:
                  project_name: '${local.project_name}'
                  project_id: '${local.project_id}'
                  organization_id: '${var.project_default_organization_id}'
    output:
      project_name:
        value: '${local.project_name}'
      project_id:
        value: '${local.project_id}'
      organization_id:
        value: '${var.project_default_organization_id}'
    variable:
      project_default_project_name:
        type: string
      project_default_organization_id:
        type: string
    terraform:
      backend:
        local:
          path: >-
            /tmp/.terrahub/local_backend/terraform-google-project-factory/project_default/terraform.tfstate
