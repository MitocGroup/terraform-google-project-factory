component:
  name: project_default_service_account
  template:
    resource:
      null_resource:
        project_default_service_account:
          triggers:
            project_id: '${data.terraform_remote_state.project_default.project_id}'
            service_account_name: '${var.project_default_service_account_service_account_name}'
          provisioner:
            - local-exec:
                when: create
                command: 'python ${local.component["path"]}/scripts/apply.py'
                environment:
                  project_id: '${data.terraform_remote_state.project_default.project_id}'
                  service_account_name: '${var.project_default_service_account_service_account_name}'
    output:
      service_account_name:
        value: >-
          ${data.terraform_remote_state.project_default.project_id}@${data.terraform_remote_state.project_default.project_id}.iam.gserviceaccount.com
    terraform:
      backend:
        local:
          path: >-
            /tmp/.terrahub/local_backend/terraform-google-project-factory/project_default_service_account/terraform.tfstate
    data:
      terraform_remote_state:
        project_default:
          backend: local
          config:
            path: >-
              /tmp/.terrahub/local_backend/terraform-google-project-factory/project_default/terraform.tfstate
  dependsOn:
    - ../project_default
terraform:
  varFile:
    - >-
      'gs://data-lake-terrahub/tfvars/terraform-google-project-factory/project_default_service_account/default.tfvars'
   